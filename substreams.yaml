specVersion: v0.1.0
package:
  name: "atomicassets"
  version: v0.1.2

protobuf:
  files:
    - atomicassets.proto
  importPaths:
    - ./proto

binaries:
  default:
    type: wasm/rust-v1
    file: ./target/wasm32-unknown-unknown/release/atomicassets.wasm

modules:
  - name: map_transfers
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.TransferEvents

  - name: map_schema_events
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.SchemaEvents

  - name: map_collections
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.Collections

  - name: map_templates
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.Templates

  - name: map_schemas
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.Schemas

  - name: map_assets
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.Assets

  - name: map_balances
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.Balances

  - name: map_offers
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.atomicassets.v1.Offers

# Not used for now
#  - name: map_collection_events
#    kind: map
#    inputs:
#      - source: sf.antelope.type.v1.Block
#    output:
#      type: proto:antelope.atomicassets.v1.CollectionEvents